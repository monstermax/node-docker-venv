
DEFAULT_NODE_VERSION=22-alpine


# Export VENV_DIR
export VENV_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")/.." &>/dev/null && pwd)
export VENV_PROJECT=$(basename $VENV_DIR)
export VENV_CONTAINER=sandbox_${VENV_PROJECT}

export VENV_NODE_VERSION="${VENV_NODE_VERSION:-$DEFAULT_NODE_VERSION}"
export VENV_IMAGE=${VENV_CONTAINER}:${VENV_NODE_VERSION}


sandbox_activate() {
    # Check docker installed
    local HAS_DOCKER=$(docker --version >/dev/null 2>/dev/null && echo 1)

    if hasDocker; then
        #local VENV_PROJECT=$(basename $VENV_DIR)

        # Start container (if not started)
        if ! isContainerUp "$VENV_CONTAINER"; then
            $VENV_DIR/.envrc.sandbox/docker/run-safe.sh

            echo Container $VENV_CONTAINER started
        else
            echo Container $VENV_CONTAINER is already up
        fi

        # Modify PATH
        export PATH="$VENV_DIR/.envrc.sandbox/bin:$PATH"
        cd $VENV_DIR/.envrc.sandbox/bin
        echo "Available binaries : $(echo $(ls))"
        cd -

        echo "Edit .envrc to change forwarded ports (current: ${VENV_PORTS:-none})"

    else
        echo "Warning: Docker not found. Cannot run container"
    fi
}


hasDocker() {
  command -v docker >/dev/null 2>&1 || return 1
  docker info >/dev/null 2>&1 || return 1
  return 0
}


isContainerUp() {
  docker ps -f "name=${VENV_CONTAINER}" -f "status=running" --quiet 2>/dev/null | grep -q .
  return $?
}


sandbox_activate

